<resources>
    <string name="app_name">H1101171004_Tutik</string>
    <string name="kom1">kom1</string>
    <string name="kom2">kom2</string>
    <string name="kom4">kom4</string>
    <string name="kom3">kom3</string>
    <string name="isi1">isi1</string>
    <string name="contoh1">contoh1</string>
    <string name="materi1">materi1</string>
    <string name="materi2">materi2</string>
    <string name="contoh2">contoh2</string>
    <string name="isi2">isi2</string>
    <string name="materi3">materi3</string>
    <string name="contoh3">contoh3</string>
    <string name="isi3">isi3</string>
    <string name="isi4">isi4</string>
    <string name="contoh4">contoh4</string>
    <string name="materi4">materi4</string>
    <string name="materi5">materi5</string>
    <string name="contoh5">contoh5</string>
    <string name="isi5">isi5</string>
    <string name="contoh_syntax">contoh Syntax</string>
    <string name="materi_activity">MATERI ACTIVITY</string>
    <string name="activity">ACTIVITY</string>
    <string name="INTENT">INTENT</string>
    <string name="broascast">BROASCAST</string>
    <string name="content">CONTENT</string>
    <string name="link_materi">LINK MATERI</string>
    <string name="contoh_syntex">CONTOH SYNTEX</string>
    <string name="materi_service">MATERI SERVICE</string>
    <string name="service_adalah_komponen_aplikasi_yang_menjalankan_operasi_tertentu_yang_bisa_berjalan_lama_pada_sistem_android_biasanya_service_itu_berjalan_di_latar_belakang_service_ini_tidak_menyediakan_antarmuka_pengguna_ui_ada_dua_macam_service_pada_android_yaitu_started_service_yang_komponen_aplikasinya_dimulai_dengan_memanggil_startservice_service_ini_akan_berjalan_selama_belum_dimatikan_atau_proses_yang_dijalankan_selesai_service_akan_tetap_berjalan_walaupun_komponen_yang_lain_dimatikan_oleh_sistem_android_service_ini_digunakan_untuk_melakukan_proses_yang_tidak_memberikan_nilai_balik_ke_komponen_yang_memanggil_contohnya_seperti_mengunduh_atau_mengunggah_berkas_bound_service_jenis_ini_merupakan_tipe_service_yang_dijalankan_oleh_komponen_lain_namun_saling_mengikat_satu_sama_lain_hubungan_yang_terjadi_antar_kedua_komponen_tersebut_seperti_client_server_bisa_saling_menerima_response_dan_menerima_request_yang_ada_pada_service_ini_dimungkinkan_terjadi_proses_ipc_interprocess_communication_service_ini_akan_tetap_berjalan_di_background_selama_masih_ada_komponen_lain_yang_mengikatnya_jika_tidak_maka_service_akan_dimatikan_oleh_sistem_aplikasi_pemutar_musik_merupakan_salah_satu_jenis_aplikasi_yang_mengimplementasikan_service_jenis_ini">Service adalah komponen aplikasi yang menjalankan operasi tertentu yang bisa berjalan lama pada sistem Android, biasanya service itu berjalan di latar belakang. Service ini tidak menyediakan antarmuka pengguna (UI). Ada dua macam service pada Android, yaitu : Started Service yang komponen aplikasinya dimulai dengan memanggil startService(). Service ini akan berjalan selama belum dimatikan atau proses yang dijalankan selesai. Service akan tetap berjalan walaupun komponen yang lain dimatikan oleh sistem Android. Service ini digunakan untuk melakukan proses yang tidak memberikan nilai balik ke komponen yang memanggil. Contohnya seperti mengunduh atau mengunggah berkas. Bound Service jenis ini merupakan tipe service yang dijalankan oleh komponen lain, namun saling mengikat satu sama lain. Hubungan yang terjadi antar kedua komponen tersebut seperti client-server. Bisa saling menerima response dan menerima request yang ada. Pada service ini dimungkinkan terjadi proses IPC (Interprocess Communication). Service ini akan tetap berjalan di background selama masih ada komponen lain yang mengikatnya. Jika tidak, maka Service akan dimatikan oleh sistem. Aplikasi pemutar musik merupakan salah satu jenis aplikasi yang mengimplementasikan Service jenis ini.</string>
    <string name="broadcast">BROADCAST</string>
    <string name="broadcast_recaiver">BROADCAST RECAIVER</string>
    <string name="content_provider">CONTENT PROVIDER</string>
    <string name="activity_adalah_komponen_pada_aplikasi_android_yang_menampilkan_dan_mengatur_halaman_aplikasi_sebagai_tempat_interaksi_antara_pengguna_dengan_aplikasi_seperti_membuat_panggilan_telepon_mengambil_foto_mengirim_pesan_singkat_atau_mengirim_email_sebuah_activity_mengatur_satu_halaman_user_interface_aplikasi_sehingga_jika_sebuah_aplikasi_android_memiliki_beberapa_halaman_user_interface_yang_saling_berinteraksi_berarti_aplikasi_tersebut_memiliki_beberapa_activity_yangsaling_berinteraksi_untuk_lebih_jelasnya_dapat_dilihat_sebagai_berikut">Activity adalah komponen pada aplikasi Android yang menampilkan dan mengatur halaman aplikasi sebagai tempat interaksi antara pengguna dengan aplikasi,seperti membuat panggilan telepon, mengambil foto, mengirim pesan singkat, atau mengirim email. Sebuah Activity mengatur satu halaman user interface aplikasi. Sehingga jika sebuah aplikasi Android memiliki beberapa halaman user interface yang saling berinteraksi, berarti aplikasi tersebut memiliki beberapa Activity yangsaling berinteraksi. ( Untuk lebih jelasnya dapat dilihat sebagai berikut )</string>
    <string name="intent_juga_merupakan_suatu_objek_yang_terdapat_dalam_suatu_activity_dimana_objek_tersebut_dapat_komunikasi_dengan_activity_yang_lain_baik_activity_pada_fungsi_internal_android_misal_seperti_memanggil_activity_dalam_satu_package_atau_beda_package_yang_masih_berada_dalam_satu_project">Intent juga merupakan suatu objek yang terdapat dalam suatu activity dimana objek tersebut dapat komunikasi dengan activity yang lain, baik activity pada fungsi internal android misal seperti memanggil activity dalam satu package atau beda package yang masih berada dalam satu project.</string>
    <string name="service_adalah_sebuah_komponen_aplikasi_yang_bisa_melakukan_operasi_yang_berjalan_lama_di_latar_belakang_dan_tidak_menyediakan_antarmuka_pengguna_komponen_aplikasi_lain_bisa_memulai_layanan_dan_komponen_aplikasi_tersebut_akan_terus_berjalan_di_latar_belakang_walaupun_pengguna_beralih_ke_aplikasi_lain">Service adalah sebuah komponen aplikasi yang bisa melakukan operasi yang berjalan lama di latar belakang dan tidak menyediakan antarmuka pengguna. Komponen aplikasi lain bisa memulai layanan dan komponen aplikasi tersebut akan terus berjalan di latar belakang walaupun pengguna beralih ke aplikasi lain</string>
    <string name="broadcast_receiver_berfungsi_menerima_pesan_intent_dari_aplikasi_lain_atau_dari_sistem_sebagai_contoh_suatu_aplikasi_mengirim_pesan_berisi_perintah_tertentu_untuk_aplikasi_lain_bahwa_beberapa_data_telah_diunduh_ke_perangkat_dan_tersedia_bagi_mereka_untuk_menggunakan_apklikasi_tersebut_jadi_broadcast_receiver_inilah_yang_akan_menangani_komunikasi_ini_dan_akan_melakukan_tindakan_yang_tepat_sebuah_broadcast_receiver_diimplementasikan_sebagai_subclass_dari_class_broadcastreceiver_dan_setiap_pesan_akan_dikirim_dan_diterima_sebagai_objek_intent">Broadcast Receiver berfungsi menerima pesan intent dari aplikasi lain atau dari sistem. Sebagai contoh, suatu aplikasi mengirim pesan berisi perintah tertentu untuk aplikasi lain bahwa beberapa data telah diunduh ke perangkat dan tersedia bagi mereka untuk menggunakan apklikasi tersebut, jadi Broadcast Receiver inilah yang akan menangani komunikasi ini dan akan melakukan tindakan yang tepat.Sebuah Broadcast Receiver diimplementasikan sebagai subclass dari class BroadcastReceiver dan setiap pesan akan dikirim dan diterima sebagai objek Intent.</string>
    <string name="contentprovider_adalah_penyedia_konten_dari_satu_aplikasi_ke_aplikasi_lain_atas_perintah_tertentu_perintah_tersebut_ditangani_oleh_sebuah_method_dari_class_contentresolver_data_dapat_disimpan_dalam_sistem_file_database_atau_di_tempat_lainnya_contentprovider_diimplementasikan_sebagai_subclass_dari_class_contentprovider_dan_harus_menerapkan_satu_set_standar_api_yang_memungkinkan_aplikasi_lain_untuk_melakukan_transaksi">ContentProvider adalah penyedia konten dari satu aplikasi ke aplikasi lain atas perintah tertentu. Perintah tersebut ditangani oleh sebuah method dari class ContentResolver. Data dapat disimpan dalam sistem file, database atau di tempat lainnya.ContentProvider diimplementasikan sebagai subclass dari class ContentProvider dan harus menerapkan satu set standar API yang memungkinkan aplikasi lain untuk melakukan transaksi.</string>
</resources>
